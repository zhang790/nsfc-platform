<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.nsfc</groupId>
	<artifactId>platform-ws</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>platform-ws</name>

	<parent>
		<groupId>com.nsfc</groupId>
		<artifactId>nsfc-platform</artifactId>
		<version>1.0.0.RELEASE</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>com.nsfc</groupId>
			<artifactId>platform-dao</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.nsfc</groupId>
			<artifactId>platform-service</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<!-- 排除内置容器，排除内置容器导出成war包可以让外部容器运行spring-boot项目-->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
				<!--排除自身的日志工具-->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--SpringBootServletInitializer接口依赖javax.servlet包-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>

		<!--使用log4j-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j</artifactId>
			<!--这里按道理来说不需要配置版本   SpringBoot的自动选择和装配，不清楚为什么-->
			<version>1.3.7.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!--添加fastjson解析JSON数据-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.16</version>
		</dependency>

		<!--添加swagger-->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.5.0</version>  <!--调整版本解决启动控制问题  原因是和SpringCloud包冲突-->
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.5.0</version> <!--调整版本解决启动控制问题  原因是和SpringCloud包冲突-->
		</dependency>

		<!--连接池-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.18</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--解决打包不通过的问题 跳过测试-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<!--找不到web.xml情况下构建war-->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<!--如果想在没有web.xml文件的情况下构建WAR，请设置为false。-->
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<resourceEncoding>utf-8</resourceEncoding>
				</configuration>
			</plugin>

			<!--idea的maven默认版本是1.5  使用这个来处理-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
